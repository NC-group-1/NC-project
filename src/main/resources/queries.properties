#user

#action
action.create=\
  WITH data(name, description, type, key) AS (\
  VALUES(:name, :description, :type, :key)),\
  key_insert AS (\
  INSERT INTO parameter_key(key)\
  SELECT key FROM data\
  ON CONFLICT DO NOTHING\
  RETURNING key AS key_id)\
  INSERT INTO action(name, description, type, key_id)\
  SELECT name, description, type, key_id\
  FROM data\
  JOIN key_insert USING(key);

action.findNumberOfElements=\
  SELECT count(*) FROM action;

action.findAllByPage=\
  SELECT action_id, name, description, type, key, action.parameter_key_id \
  FROM action JOIN parameter_key \
  ON action.parameter_key_id = parameter_key.parameter_key_id \
  ORDER BY name LIMIT ? OFFSET ?;

action.findById=\
  SELECT action_id, name, description, type, parameter_key_id FROM action \
  WHERE action_id=?;

action.edit=\
  UPDATE action SET name=?, description=?, type=?, key_id=? \
  WHERE action_id=?;

action.findByName=\
  SELECT a.name, a.description, a.type, p.key \
  FROM action AS a \
  JOIN parameter_key AS p ON a.id = p.id \
  WHERE a.name LIKE CONCAT('%',?,'%');

action.setActionDescription=\
UPDATE action SET description =:description  WHERE id=?;

action.setActionName=\
  UPDATE action SET name=:name WHERE id=?;

action.deleteById=\
  DELETE FROM action \
  WHERE id=?;

#compound
compound.create=

compound.findAll=

compound.findById=

compound.edit=

compound.deleteById=