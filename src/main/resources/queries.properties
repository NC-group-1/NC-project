#user

#action
action.create=\
  WITH data(name, description, type, key) AS (\
  VALUES(:name, :description, :type, :key)),\
  key_insert AS (\
  INSERT INTO parameter_key(key)\
  SELECT key FROM data\
  ON CONFLICT DO NOTHING\
  RETURNING key AS key_id)\
  INSERT INTO action(name, description, type, key_id)\
  SELECT name, description, type, key_id\
  FROM data\
  JOIN key_insert USING(key);

action.findAll=\
  SELECT id, name, description, type, key_id FROM action LIMIT :size OFFSET :number;

action.findById=\
  SELECT id, name, description, type, key_id FROM action\
  WHERE id=:id;

action.edit=\
  UPDATE action SET(name, description, type, key_id)\
  =(:name, :description, :type, :key_id)\
  WHERE id=:id;

action.deleteById=\
  DELETE FROM action \
  WHERE id=:id;

action.findByKey=\
  SELECT a.name, a.description, a.type, a.key_id\
  FROM action AS a \
  JOIN parameter_key AS p ON a.key_id = p.id \
  WHERE p.key LIKE '%'||:key||'%';

#compound
compound.create=\
    INSERT INTO action (name, description, type) VALUES (?, ?, ?);

compound.getNumberOfCompounds=\
    SELECT count(DISTINCT action.action_id) FROM action INNER JOIN compound_action ON action.action_id = compound_action.compound_id;

compound.findAll=\
    SELECT DISTINCT action.action_id, name, description FROM action INNER JOIN compound_action ON action.action_id = compound_action.compound_id;

compound.findByPage=\
    SELECT DISTINCT action.action_id, name, description FROM action INNER JOIN compound_action ON action.action_id = compound_action.compound_id \
    JOIN parameter_key \
    ON action.parameter_key_id = parameter_key.parameter_key_id \
    ORDER BY name LIMIT ? OFFSET ?;

compound.findById=\
    SELECT DISTINCT action.action_id, name, description FROM action INNER JOIN compound_action ON action.action_id = compound_action.compound_id WHERE action.action_id = ?;

compound.edit=\
    UPDATE action SET name = ?, description = ? WHERE action_id = ?;

compound.deleteById=\
    DELETE FROM action WHERE action_id = ?;

compound.findCompoundActions=\
  SELECT action.action_id id, name, description FROM action INNER JOIN compound_action ON action.action_id = compound_action.action_id WHERE compound_id = ?;


compound.addActionToCompound=\
  INSERT INTO compound_action (action_id, compound_id, order_num, parameter_key_id) values (?,?,?,?);

#Break up compound into actions
#compound.addActionToCompound=\
#    SELECT DISTINCT action.action_id, ? compound_id, 0 order_num, action.parameter_key_id FROM action \
#    left outer join compound_action ON action.action_id = compound_action.action_id \
#    WHERE (CASE WHEN compound_id = ? THEN compound_id = ? ELSE (action.action_id = ? AND type != 'Compound') END);

compound.deleteActionFromCompound=\
  DELETE FROM compound_action where action_id = ? AND compound_id = ?

testCase.getAllByPage=\
  SELECT tc.test_case_id, tc.name, tc.creator_id, tc.creation_date, tc.retries \
  FROM test_case tc INNER JOIN usr u ON tc.creator_id=u.user_id WHERE tc.name \
  LIKE ? ORDER BY %s %s LIMIT ? OFFSET ?*?

testCase.edit=\
  UPDATE test_case \
  SET name=?, retries=? \
  WHERE test_case_id=?

testCase.deleteById=\
  DELETE FROM test_case \
  WHERE test_case_id = ?;

testCase.getSizeOfResultSet=\
  SELECT COUNT(*) FROM test_case \
  WHERE name LIKE ?

