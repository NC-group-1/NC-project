#user

#action
action.create=\
  WITH data(name, description, type, key) AS (\
  VALUES(:name, :description, :type, :key)),\
  key_insert AS (\
  INSERT INTO parameter_key(key)\
  SELECT key FROM data\
  ON CONFLICT DO NOTHING\
  RETURNING key AS key_id)\
  INSERT INTO action(name, description, type, key_id)\
  SELECT name, description, type, key_id\
  FROM data\
  JOIN key_insert USING(key);

action.findAll=\
  SELECT id, name, description, type, key_id FROM action LIMIT :size OFFSET :number;

action.findById=\
  SELECT id, name, description, type, key_id FROM action\
  WHERE id=:id;

action.edit=\
  UPDATE action SET(name, description, type, key_id)\
  =(:name, :description, :type, :key_id)\
  WHERE id=:id;

action.deleteById=\
  DELETE FROM action \
  WHERE id=:id;

action.findByKey=\
  SELECT a.name, a.description, a.type, a.key_id\
  FROM action AS a \
  JOIN parameter_key AS p ON a.key_id = p.id \
  WHERE p.key LIKE '%'||:key||'%';

#compound
compound.create=

compound.findAll=

compound.findById=

compound.edit=

compound.deleteById=